{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARKY\\\\Documents\\\\GitHub\\\\Drivey\\\\apps\\\\mobile\\\\src\\\\app\\\\screens\\\\WelcomeScreen.tsx\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WelcomeScreen() {\n  const navigation = useNavigation();\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  return _jsxDEV(View, {\n    style: [styles.container, {\n      backgroundColor: isDark ? '#0A0A1A' : '#FFFFFF'\n    }],\n    children: [_jsxDEV(View, {\n      style: styles.content,\n      children: [_jsxDEV(Text, {\n        style: [styles.title, {\n          color: isDark ? '#F5F5F5' : '#111827'\n        }],\n        children: \"Welcome to DriveMate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: [styles.subtitle, {\n          color: isDark ? '#F5F5F5' : '#111827'\n        }],\n        children: \"Your trusted platform for professional chauffeur services\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.buttonContainer,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: [styles.button, styles.primaryButton],\n        onPress: () => navigation.navigate('Login'),\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: [styles.button, styles.secondaryButton],\n        onPress: () => navigation.navigate('Register'),\n        children: _jsxDEV(Text, {\n          style: [styles.buttonText, {\n            color: isDark ? '#F5F5F5' : '#111827'\n          }],\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  subtitle: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginBottom: 32\n  },\n  buttonContainer: {\n    gap: 16,\n    marginBottom: 32\n  },\n  button: {\n    padding: 16,\n    borderRadius: 12,\n    alignItems: 'center'\n  },\n  primaryButton: {\n    backgroundColor: '#007AFF'\n  },\n  secondaryButton: {\n    backgroundColor: 'transparent',\n    borderWidth: 1,\n    borderColor: '#007AFF'\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: '600'\n  }\n});","map":{"version":3,"names":["useNavigation","useColorScheme","jsxDEV","_jsxDEV","WelcomeScreen","navigation","colorScheme","isDark","View","style","styles","container","backgroundColor","children","content","Text","title","color","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","buttonContainer","TouchableOpacity","button","primaryButton","onPress","navigate","buttonText","secondaryButton","StyleSheet","create","flex","padding","justifyContent","alignItems","fontSize","fontWeight","marginBottom","textAlign","gap","borderRadius","borderWidth","borderColor"],"sources":["C:/Users/HARKY/Documents/GitHub/Drivey/apps/mobile/src/app/screens/WelcomeScreen.tsx"],"sourcesContent":["import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { useColorScheme } from 'react-native';\r\n\r\ntype RootStackParamList = {\r\n  Welcome: undefined;\r\n  Login: undefined;\r\n  Register: undefined;\r\n  Home: undefined;\r\n};\r\n\r\ntype NavigationProp = NativeStackNavigationProp<RootStackParamList, 'Welcome'>;\r\n\r\nexport default function WelcomeScreen() {\r\n  const navigation = useNavigation<NavigationProp>();\r\n  const colorScheme = useColorScheme();\r\n  const isDark = colorScheme === 'dark';\r\n\r\n  return (\r\n    <View style={[\r\n      styles.container,\r\n      { backgroundColor: isDark ? '#0A0A1A' : '#FFFFFF' }\r\n    ]}>\r\n      <View style={styles.content}>\r\n        <Text style={[\r\n          styles.title,\r\n          { color: isDark ? '#F5F5F5' : '#111827' }\r\n        ]}>\r\n          Welcome to DriveMate\r\n        </Text>\r\n        <Text style={[\r\n          styles.subtitle,\r\n          { color: isDark ? '#F5F5F5' : '#111827' }\r\n        ]}>\r\n          Your trusted platform for professional chauffeur services\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity\r\n          style={[styles.button, styles.primaryButton]}\r\n          onPress={() => navigation.navigate('Login')}\r\n        >\r\n          <Text style={styles.buttonText}>Login</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={[styles.button, styles.secondaryButton]}\r\n          onPress={() => navigation.navigate('Register')}\r\n        >\r\n          <Text style={[\r\n            styles.buttonText,\r\n            { color: isDark ? '#F5F5F5' : '#111827' }\r\n          ]}>\r\n            Register\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n    textAlign: 'center',\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    textAlign: 'center',\r\n    marginBottom: 32,\r\n  },\r\n  buttonContainer: {\r\n    gap: 16,\r\n    marginBottom: 32,\r\n  },\r\n  button: {\r\n    padding: 16,\r\n    borderRadius: 12,\r\n    alignItems: 'center',\r\n  },\r\n  primaryButton: {\r\n    backgroundColor: '#007AFF',\r\n  },\r\n  secondaryButton: {\r\n    backgroundColor: 'transparent',\r\n    borderWidth: 1,\r\n    borderColor: '#007AFF',\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}