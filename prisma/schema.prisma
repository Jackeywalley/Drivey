// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  firstName     String
  lastName      String
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]
  payments      Payment[]
  chauffeur     Chauffeur?
}

model Chauffeur {
  id            String    @id @default(cuid())
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id])
  status        String    @default("available")
  currentLocation Json?
  bookings      Booking[]
  vehicles      Vehicle[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Vehicle {
  id            String    @id @default(cuid())
  chauffeurId   String?
  chauffeur     Chauffeur? @relation(fields: [chauffeurId], references: [id])
  make          String
  model         String
  year          Int
  color         String
  licensePlate  String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Booking {
  id            String    @id @default(cuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  chauffeurId   String?
  chauffeur     Chauffeur? @relation(fields: [chauffeurId], references: [id])
  pickupLocation Json
  dropoffLocation Json
  pickupTime    DateTime
  status        String    @default("pending")
  payment       Payment?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Payment {
  id            String    @id @default(cuid())
  bookingId     String    @unique
  booking       Booking   @relation(fields: [bookingId], references: [id])
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  amount        Float
  status        String    @default("pending")
  paymentMethodId String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum Role {
  USER
  CHAUFFEUR
  ADMIN
} 